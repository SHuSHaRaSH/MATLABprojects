function ex11
%ЗАДАНИЕ:
% Для систем
%   x' = x^3 - y, x из R,
%   y' = x + y^3, y из R,
% и
%   x' = 2*y^3 - x^5, x из R,
%   y' = -x - y^3 + y^5, y из R,
% исследовать на устойчивость нулевое положение равновесия, построив 
% функцию Ляпунова и применив теоремы Ляпунова или Четаева. Нарисовать 
% фазовый портрет системы и линии уровня функции Ляпунова. Траектории 
% нарисовать меняющими цвет в соответствии со значением функции Ляпунова 
% вдоль траектории (например, чем больше — тем краснее).

clc
clear
% --------------------------- system 1 ----------------------------------
    % --------------------- функция Ляпунова ---------------------
    v = @(x, y) x.^2 + y.^2;
    % v > 0 в области U={x из R2: 0 < |x| < eps}
    % v == 0 на границе области (точка (0,0))
    % dv_dt = 2*x*(x^3 - y) + 2*y*(x + y^3) = 2*(x^4 + y^4) 
    % dv_dt > 0 в области U
    % в области  U(a)={x из R2: sqrt(a) < |x| < eps} dv_dt >= c*(a^4) > 0, где с = const
    % ==> по теореме Четаева НУЛЕВОЕ РЕШЕНИЕ НЕУСТОЙЧИВО
    
    % ------------ начальные данные, переменные, параметры -------------
    t0 = -10;
    tf = 10;
    n = 20;
    tetta = linspace(0, 2*pi, n);
    r = 1;
    max = 15;
    
    % ------------------------- линии уровня -----------------------------
    figure(1);
    cla;
    axis([-max max -max max]);
    hold on;
    [X, Y] = meshgrid(-max:0.02:max, -max:0.02:max);
    Z = v(X, Y);
    colormap cool;
    contourf(X, Y, Z, 20);
    colorbar
    
    % ------------------------ фазовый портрет -------------------------
    for i=1:n
        y0 = [r*cos(tetta(i)), r*sin(tetta(i))];
        [t, F] = ode45(@sys1, [t0, tf], y0);
        plot(F(:, 1), F(:, 2), 'k', 'LineSmoothing', 'on');       
%         axx = [F(1, 1) x(19)];
%         ayy = [y(11) y(19)];
%         [arrowx,arrowy] = dsxy2figxy(gca, axx, ayy);
%         annotation('arrow',arrowx,arrowy);
    end;
    
    title('Первая система: x'' = x^3 - y; y'' = x + y^3');
    legend('траектория системы', 'линии уровня');
    hold off
    
% --------------------------- system 2 ----------------------------------
    % --------------------- функция Ляпунова ---------------------
    v = @(x, y) x.^2 + y.^4;
    % v > 0 при х не равном 0
    % v == 0 на границе области (точка (0,0))
    % dv_dt = 2*x*(2*y^3 - x^5) + 4*(y^3)*(-x - y^3 + y^5) = -2*x^6 - 4*y^6 + 4*y^8 = -2*x^6 - 4*y^6*(1 - y^2) < 0 
    % dv_dt < 0 в области U = {x из R2, t из R: |x| < eps, t > t0}
    % ==> по теореме Ляпунова НУЛЕВОЕ РЕШЕНИЕ УСТОЙЧИВО
    
    % ------------ начальные данные, переменные, параметры -------------
    t0 = 5;
    tf = 100;
    n = 40;
    tetta = linspace(0, 2*pi, n);
    r = 6;
    max = 7;
    
    
    % ------------------------- линии уровня -----------------------------
    figure(2);
    cla;
    axis([-max max -max max]);
    hold on;
    [X, Y] = meshgrid(-max:0.02:max, -max:0.02:max);
    Z = v(X, Y);
    colormap cool;
    contourf(X, Y, Z, 20);
    colorbar
    
    % ------------------------ фазовый портрет -------------------------
    for i=1:n
        y0 = [r*cos(tetta(i)), r*sin(tetta(i))];
        [t, F] = ode45(@sys2, [t0, tf], y0);
        plot(F(:, 1), F(:, 2), 'k', 'LineSmoothing', 'on');
    end;
    
    title('Первая система: x'' = x^3 - y; y'' = x + y^3');
    legend('траектория системы', 'линии уровня');
    hold off
    
end

function dxdt = sys1(t, x)
    dxdt = [(x(1)^3 - x(2)); ...
            (x(1) + x(2)^3)];
end

function dxdt = sys2(t, x)
    dxdt = [(2*x(2)^3 - x(1)^5); ...
            (-x(1) - x(2)^3 + x(2)^5)];
end